<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.work_liuchangxu"
    android:versionCode="1"
    android:versionName="1.0" >

    <uses-sdk
        android:minSdkVersion="27"
        android:targetSdkVersion="34" />

    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.INTERNET" />

    <!-- To store the heap dumps and leak analysis results. -->
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" /> <!-- To allow posting notifications on Android 13 -->
    <uses-permission android:name="android.permission.POST_NOTIFICATIONS" />

    <permission
        android:name="com.example.work_liuchangxu.DYNAMIC_RECEIVER_NOT_EXPORTED_PERMISSION"
        android:protectionLevel="signature" />

    <uses-permission android:name="com.example.work_liuchangxu.DYNAMIC_RECEIVER_NOT_EXPORTED_PERMISSION" />

    <application
        android:allowBackup="true"
        android:appComponentFactory="androidx.core.app.CoreComponentFactory"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:debuggable="true"
        android:extractNativeLibs="false"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:networkSecurityConfig="@xml/network_security_config"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:testOnly="true"
        android:theme="@style/Theme.work_liuchanxu" >
        <activity
            android:name="com.example.work_liuchangxu.work_0429.Main0428Activity_optimized"
            android:exported="false" />
        <activity
            android:name="com.example.work_liuchangxu.work_0429.Main0429Activity"
            android:exported="false" />
        <activity
            android:name="com.example.work_liuchangxu.work_0428.Main0428Activity_2"
            android:exported="false" />
        <activity
            android:name="com.example.work_liuchangxu.work_0428.Main0428Activity_1"
            android:exported="false" />
        <activity
            android:name="com.example.work_liuchangxu.work_0427.Main0427Activity"
            android:exported="false" />
        <activity
            android:name="com.example.work_liuchangxu.work_0426.AnimationActivity_2"
            android:exported="false" />
        <activity
            android:name="com.example.work_liuchangxu.work_0426.Main0426Activity"
            android:exported="false" />
        <activity
            android:name="com.example.work_liuchangxu.work_0426.AnimationActivity_1"
            android:exported="false" />
        <activity
            android:name="com.example.work_liuchangxu.work_0425.ShowImageActivity0425"
            android:exported="false" />
        <activity
            android:name="com.example.work_liuchangxu.work_0425.ShowTextActivity0425"
            android:exported="false" />
        <activity
            android:name="com.example.work_liuchangxu.work_0425.Main0425Activity"
            android:exported="false" />
        <activity
            android:name="com.example.work_liuchangxu.work_0424.Main0424Activity"
            android:exported="true" />
        <activity
            android:name="com.example.work_liuchangxu.TrueMainActivity"
            android:exported="true" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
            android:name="com.example.work_liuchangxu.work_0423.RecycleActivity"
            android:exported="true" />
        <activity
            android:name="com.example.work_liuchangxu.work_0422.Main0422Activity"
            android:exported="true" />

        <service
            android:name="com.example.work_liuchangxu.work_0421.RemoteService"
            android:enabled="true"
            android:exported="false"
            android:permission="TODO" />

        <receiver
            android:name="com.example.work_liuchangxu.work_0421.NativeReceiver"
            android:enabled="true"
            android:exported="true" />
        <receiver
            android:name="com.example.work_liuchangxu.work_0421.StaticReceiver"
            android:enabled="true"
            android:exported="true" >
            <intent-filter>
                <action android:name="com.example.work_liuchangxu.Static_Action" />

                <data android:mimeType="text/plain" />
            </intent-filter>
        </receiver>

        <activity
            android:name="com.example.work_liuchangxu.work_0421.ServiceActivity"
            android:exported="false" />

        <service
            android:name="com.example.work_liuchangxu.work_0421.bindService"
            android:enabled="true"
            android:exported="true" />
        <service
            android:name="com.example.work_liuchangxu.work_0421.startService"
            android:enabled="true"
            android:exported="true" />

        <activity
            android:name="com.example.work_liuchangxu.work_0421.SingleInstanceActivity"
            android:exported="false"
            android:launchMode="singleInstance" />
        <activity
            android:name="com.example.work_liuchangxu.work_0421.SingleTaskActivity"
            android:exported="false"
            android:launchMode="singleTask" />
        <activity
            android:name="com.example.work_liuchangxu.work_0421.SingleTopActivity"
            android:exported="false"
            android:launchMode="singleTop" />
        <activity
            android:name="com.example.work_liuchangxu.work_0421.StandardActivity"
            android:exported="false"
            android:launchMode="standard" />
        <activity
            android:name="com.example.work_liuchangxu.work_0421.Work0421MainActivity"
            android:exported="true" />

        <provider
            android:name="leakcanary.internal.LeakCanaryFileProvider"
            android:authorities="com.squareup.leakcanary.fileprovider.com.example.work_liuchangxu"
            android:exported="false"
            android:grantUriPermissions="true" >
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/leak_canary_file_paths" />
        </provider>

        <activity
            android:name="leakcanary.internal.activity.LeakActivity"
            android:exported="true"
            android:icon="@mipmap/leak_canary_icon"
            android:label="@string/leak_canary_display_activity_label"
            android:taskAffinity="com.squareup.leakcanary.com.example.work_liuchangxu"
            android:theme="@style/leak_canary_LeakCanary.Base" >
            <intent-filter android:label="@string/leak_canary_import_hprof_file" >
                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.BROWSABLE" />

                <data android:scheme="file" />
                <data android:scheme="content" />
                <data android:mimeType="*/*" />
                <data android:host="*" />
                <data android:pathPattern=".*\\.hprof" />
                <data android:pathPattern=".*\\..*\\.hprof" />
                <data android:pathPattern=".*\\..*\\..*\\.hprof" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\.hprof" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\..*\\.hprof" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\..*\\..*\\.hprof" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\..*\\..*\\..*\\.hprof" />
                <!--
            Since hprof isn't a standard MIME type, we have to declare such patterns.
            Most file providers will generate URIs including their own package name,
            which contains `.` characters that must be explicitly escaped in pathPattern.
            @see https://stackoverflow.com/a/31028507/703646
                -->
            </intent-filter>
        </activity>

        <activity-alias
            android:name="leakcanary.internal.activity.LeakLauncherActivity"
            android:banner="@drawable/leak_canary_tv_icon"
            android:enabled="@bool/leak_canary_add_launcher_icon"
            android:exported="true"
            android:icon="@mipmap/leak_canary_icon"
            android:label="@string/leak_canary_display_activity_label"
            android:targetActivity="leakcanary.internal.activity.LeakActivity"
            android:taskAffinity="com.squareup.leakcanary.com.example.work_liuchangxu"
            android:theme="@style/leak_canary_LeakCanary.Base" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
                <!-- Android TV launcher intent -->
                <category android:name="android.intent.category.LEANBACK_LAUNCHER" />
            </intent-filter>
        </activity-alias>

        <activity
            android:name="leakcanary.internal.RequestPermissionActivity"
            android:excludeFromRecents="true"
            android:icon="@mipmap/leak_canary_icon"
            android:label="@string/leak_canary_storage_permission_activity_label"
            android:taskAffinity="com.squareup.leakcanary.com.example.work_liuchangxu"
            android:theme="@style/leak_canary_Theme.Transparent" />

        <receiver android:name="leakcanary.internal.NotificationReceiver" />

        <provider
            android:name="leakcanary.internal.MainProcessAppWatcherInstaller"
            android:authorities="com.example.work_liuchangxu.leakcanary-installer"
            android:enabled="@bool/leak_canary_watcher_auto_install"
            android:exported="false" />
        <provider
            android:name="leakcanary.internal.PlumberInstaller"
            android:authorities="com.example.work_liuchangxu.plumber-installer"
            android:enabled="@bool/leak_canary_plumber_auto_install"
            android:exported="false" />
        <provider
            android:name="androidx.startup.InitializationProvider"
            android:authorities="com.example.work_liuchangxu.androidx-startup"
            android:exported="false" >
            <meta-data
                android:name="androidx.emoji2.text.EmojiCompatInitializer"
                android:value="androidx.startup" />
            <meta-data
                android:name="androidx.lifecycle.ProcessLifecycleInitializer"
                android:value="androidx.startup" />
            <meta-data
                android:name="androidx.profileinstaller.ProfileInstallerInitializer"
                android:value="androidx.startup" />
        </provider>

        <receiver
            android:name="androidx.profileinstaller.ProfileInstallReceiver"
            android:directBootAware="false"
            android:enabled="true"
            android:exported="true"
            android:permission="android.permission.DUMP" >
            <intent-filter>
                <action android:name="androidx.profileinstaller.action.INSTALL_PROFILE" />
            </intent-filter>
            <intent-filter>
                <action android:name="androidx.profileinstaller.action.SKIP_FILE" />
            </intent-filter>
            <intent-filter>
                <action android:name="androidx.profileinstaller.action.SAVE_PROFILE" />
            </intent-filter>
            <intent-filter>
                <action android:name="androidx.profileinstaller.action.BENCHMARK_OPERATION" />
            </intent-filter>
        </receiver>
    </application>

</manifest>